[
    {
        "id": "1756ddfa.1667e2",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5df09b4b5fda7674",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "948fc96f813bf38e",
        "type": "tab",
        "label": "Flow 6",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "891b65d727c3acc7",
        "type": "tab",
        "label": "Flow 7",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e97d08da0a84567c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "iotsecond_mysql_1",
        "port": "3306",
        "db": "TimeSeries",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "2cb7d9050167ea23",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iotsecond_broker_1",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ccb66277295561bf",
        "type": "MySQLdatabase",
        "name": "",
        "host": "iotsecond_mysql_1",
        "port": "3306",
        "db": "TimeSeries",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "225dd9dc.d54606",
        "type": "MySQLdatabase",
        "name": "",
        "host": "iotsecond_mysql_1",
        "port": "3306",
        "db": "TimeSeries",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "ade2c9a9.f1f838",
        "type": "http in",
        "z": "1756ddfa.1667e2",
        "name": "",
        "url": "/get/topicLike/:topic/payloadLike/:payload/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "f5aca326.c3ee"
            ]
        ]
    },
    {
        "id": "f5aca326.c3ee",
        "type": "function",
        "z": "1756ddfa.1667e2",
        "name": "create query",
        "func": "// Create query\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n \" FROM thingData WHERE\" +\n \" topic LIKE '\" + msg.req.params.topic.\nreplace(/\\*/g, \"%\") + \"'\" +\n \" AND\" +\n \" payload LIKE '\" + msg.req.params.payload.\nreplace(/\\*/g, \"%\") + \"'\" +\n \" AND deleted=0\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY ID DESC\" +\n \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 300,
        "wires": [
            [
                "e7e018e6.aa5558"
            ]
        ]
    },
    {
        "id": "e7e018e6.aa5558",
        "type": "mysql",
        "z": "1756ddfa.1667e2",
        "mydb": "225dd9dc.d54606",
        "name": "",
        "x": 440,
        "y": 400,
        "wires": [
            [
                "f39bf043.673a6"
            ]
        ]
    },
    {
        "id": "f39bf043.673a6",
        "type": "function",
        "z": "1756ddfa.1667e2",
        "name": "prepare response",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 340,
        "wires": [
            [
                "43d6d930.bcb488"
            ]
        ]
    },
    {
        "id": "43d6d930.bcb488",
        "type": "http response",
        "z": "1756ddfa.1667e2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 580,
        "y": 480,
        "wires": []
    },
    {
        "id": "7d7a20d15e509c8f",
        "type": "http in",
        "z": "5df09b4b5fda7674",
        "name": "",
        "url": "/get/:topic/after/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "efd5f9e1c317b94a"
            ]
        ]
    },
    {
        "id": "91c73d7bf29bfbc6",
        "type": "http in",
        "z": "5df09b4b5fda7674",
        "name": "",
        "url": "/get/:topic/before/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "b9cfaaf341021ee3"
            ]
        ]
    },
    {
        "id": "6a9184c4e5e75674",
        "type": "http in",
        "z": "5df09b4b5fda7674",
        "name": "",
        "url": "/get/:topic/during/:start/:end/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "d38ef5bf15450dc0"
            ]
        ]
    },
    {
        "id": "efd5f9e1c317b94a",
        "type": "function",
        "z": "5df09b4b5fda7674",
        "name": "Create 'AFTER' query",
        "func": "// Create 'AFTER' query\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n \" FROM thingData WHERE\" +\n \" topic LIKE '\" + msg.req.params.topic.\nreplace(/\\*/g, \"%\") + \"'\" +\n \" AND\" +\n \" timestamp >= '\" + msg.req.params.time + \"'\" +\n \" AND deleted=0\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY ID DESC\" +\n \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 180,
        "wires": [
            [
                "22411ad40e922e4f"
            ]
        ]
    },
    {
        "id": "b9cfaaf341021ee3",
        "type": "function",
        "z": "5df09b4b5fda7674",
        "name": "Create 'BEFORE' query",
        "func": "// Create 'BEFORE' query\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n \" FROM thingData WHERE\" +\n \" topic LIKE '\" + msg.req.params.topic.\nreplace(/\\*/g, \"%\") + \"'\" +\n \" AND\" +\n \" timestamp <= '\" + msg.req.params.time + \"'\" +\n \" AND deleted=0\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY ID DESC\" +\n \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 260,
        "wires": [
            [
                "22411ad40e922e4f"
            ]
        ]
    },
    {
        "id": "d38ef5bf15450dc0",
        "type": "function",
        "z": "5df09b4b5fda7674",
        "name": "Create 'DURING' query",
        "func": "// Create 'DURING' query\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n \" FROM thingData WHERE\" +\n \" topic LIKE '\" + msg.req.params.topic.\nreplace(/\\*/g, \"%\") + \"'\" +\n \" AND\" +\n \" timestamp >= '\" + msg.req.params.start + \"'\" +\n \" AND\" +\n \" timestamp <='\" + msg.req.params.end + \"'\" +\n \" AND deleted=0\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY ID DESC\" +\n \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 360,
        "wires": [
            [
                "22411ad40e922e4f"
            ]
        ]
    },
    {
        "id": "22411ad40e922e4f",
        "type": "mysql",
        "z": "5df09b4b5fda7674",
        "mydb": "e97d08da0a84567c",
        "name": "",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "20bf2661d8817629"
            ]
        ]
    },
    {
        "id": "20bf2661d8817629",
        "type": "function",
        "z": "5df09b4b5fda7674",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            [
                "c6fdcd4bea6c4f07"
            ]
        ]
    },
    {
        "id": "c6fdcd4bea6c4f07",
        "type": "http response",
        "z": "5df09b4b5fda7674",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "52c91c51298ca532",
        "type": "http in",
        "z": "948fc96f813bf38e",
        "name": "",
        "url": "/delete/:topic/id/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "877c65b365ba7c6b"
            ]
        ]
    },
    {
        "id": "c543e7453c536528",
        "type": "http in",
        "z": "948fc96f813bf38e",
        "name": "",
        "url": "/delete/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "b582dfd876550496"
            ]
        ]
    },
    {
        "id": "18b532874d419a59",
        "type": "http in",
        "z": "948fc96f813bf38e",
        "name": "",
        "url": "/delete/:topic/first/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "3e3051c208fa6352"
            ]
        ]
    },
    {
        "id": "5711c0f772713cc9",
        "type": "http in",
        "z": "948fc96f813bf38e",
        "name": "",
        "url": "/delete/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "acaaa5fd28f40091"
            ]
        ]
    },
    {
        "id": "877c65b365ba7c6b",
        "type": "function",
        "z": "948fc96f813bf38e",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"UPDATE thingData\" +\n \" SET deleted=1\" +\n \" WHERE\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" AND id=\" + msg.req.params.id + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "6d3f00725a563759"
            ]
        ]
    },
    {
        "id": "b582dfd876550496",
        "type": "function",
        "z": "948fc96f813bf38e",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"UPDATE thingData\" +\n \" SET deleted=1 \" +\n \" WHERE\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \");\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 220,
        "wires": [
            [
                "6d3f00725a563759"
            ]
        ]
    },
    {
        "id": "3e3051c208fa6352",
        "type": "function",
        "z": "948fc96f813bf38e",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n msg.req.params.count = 1;\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"DELETE thingData\" +\n \" WHERE deleted=1\" +\n \" AND\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY id ASC LIMIT \" + msg.req.params.count +\n\";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "6d3f00725a563759"
            ]
        ]
    },
    {
        "id": "acaaa5fd28f40091",
        "type": "function",
        "z": "948fc96f813bf38e",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n msg.req.params.count = 1;\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"DELETE thingData\" +\n \" WHERE deleted=1\" +\n \" AND\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY id DESC LIMIT \" + msg.req.params.count +\n\";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 380,
        "wires": [
            [
                "6d3f00725a563759"
            ]
        ]
    },
    {
        "id": "6d3f00725a563759",
        "type": "mysql",
        "z": "948fc96f813bf38e",
        "mydb": "e97d08da0a84567c",
        "name": "",
        "x": 590,
        "y": 160,
        "wires": [
            [
                "d866312fc0c93789"
            ]
        ]
    },
    {
        "id": "721ebe4128fa8f98",
        "type": "http response",
        "z": "948fc96f813bf38e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "d866312fc0c93789",
        "type": "function",
        "z": "948fc96f813bf38e",
        "name": "Prepare response",
        "func": "// Prepare response\nmsg.payload = {\n \"found\": msg.payload.affectedRows,\n \"changed\": msg.payload.changedRows,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 240,
        "wires": [
            [
                "721ebe4128fa8f98"
            ]
        ]
    },
    {
        "id": "b48ba388e88f95f8",
        "type": "http in",
        "z": "891b65d727c3acc7",
        "name": "",
        "url": "/purge/:topic/id/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "2ca2f1f181809377"
            ]
        ]
    },
    {
        "id": "60ac71416e12cf82",
        "type": "http in",
        "z": "891b65d727c3acc7",
        "name": "",
        "url": "/purge/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "3308cc8d4326f8db"
            ]
        ]
    },
    {
        "id": "036b976cbd26077a",
        "type": "http in",
        "z": "891b65d727c3acc7",
        "name": "",
        "url": "/purge/:topic/first/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "f71bd8f91b5999e6"
            ]
        ]
    },
    {
        "id": "40e29055e03b5ab8",
        "type": "http in",
        "z": "891b65d727c3acc7",
        "name": "",
        "url": "/purge/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "f2251fb54f44b6fb"
            ]
        ]
    },
    {
        "id": "2ca2f1f181809377",
        "type": "function",
        "z": "891b65d727c3acc7",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"DELETE thingData\" +\n \" WHERE deleted=1\" +\n \" AND\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" AND id=\" + msg.req.params.id + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "b78232ccaa0e914e"
            ]
        ]
    },
    {
        "id": "3308cc8d4326f8db",
        "type": "function",
        "z": "891b65d727c3acc7",
        "name": "create query",
        "func": "// Purge several records\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"DELETE thingData\" +\n \" WHERE deleted=1\" +\n \" AND\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \");\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "b78232ccaa0e914e"
            ]
        ]
    },
    {
        "id": "f71bd8f91b5999e6",
        "type": "function",
        "z": "891b65d727c3acc7",
        "name": "create query",
        "func": "// Purge first few records\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n msg.req.params.count = 1;\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"DELETE thingData\" +\n \" WHERE deleted=1\" +\n \" AND\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY id ASC LIMIT \" + msg.req.params.count +\n\";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "b78232ccaa0e914e"
            ]
        ]
    },
    {
        "id": "f2251fb54f44b6fb",
        "type": "function",
        "z": "891b65d727c3acc7",
        "name": "create query",
        "func": "// Purge last few records\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n msg.req.params.count = 1;\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n msg.req.authFilter = 1;\nmsg.topic = \"DELETE thingData\" +\n \" WHERE deleted=1\" +\n \" AND\" +\n \" topic='\" + msg.req.params.topic + \"'\" +\n \" AND (\" + msg.req.authFilter + \")\" +\n \" ORDER BY id DESC LIMIT \" + msg.req.params.count +\n\";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "b78232ccaa0e914e"
            ]
        ]
    },
    {
        "id": "b78232ccaa0e914e",
        "type": "mysql",
        "z": "891b65d727c3acc7",
        "mydb": "e97d08da0a84567c",
        "name": "",
        "x": 610,
        "y": 140,
        "wires": [
            [
                "1dd795068b611cea"
            ]
        ]
    },
    {
        "id": "4237fd7c792dacdb",
        "type": "http response",
        "z": "891b65d727c3acc7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 340,
        "wires": []
    },
    {
        "id": "1dd795068b611cea",
        "type": "function",
        "z": "891b65d727c3acc7",
        "name": "Prepare response",
        "func": "// Prepare response\nmsg.payload = {\n \"found\": msg.payload.affectedRows,\n \"changed\": msg.payload.changedRows,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 220,
        "wires": [
            [
                "4237fd7c792dacdb"
            ]
        ]
    }
]